{"version":3,"sources":["redux/slices/errorsSlice.js","utils/storeUsersForumsInLocalStorage.js","redux/slices/authSlice.js","redux/slices/forumAuthSlice.js","redux/store.js","components/ui/theme.js","components/onboard/Landing.js","components/auth/Login.js","components/auth/Signup.js","components/error/PageNotFound.js","components/private/PrivateRoute.js","utils/domPurifyConfig.js","components/forum/CreatePost.js","components/forum/ProfilePopup.js","components/forum/AppBarAndDrawer.js","components/forum/Post.js","components/forum/PostsList.js","components/forum/MembersPanel.js","components/forum/Forum.js","utils/customHooks.js","components/forum-auth/Join.js","components/forum-auth/Create.js","components/onboard/GetStarted.js","components/post/CreateComment.js","components/post/Comment.js","components/post/CommentsList.js","components/post/PostPage.js","components/app/App.js","serviceWorker.js","index.js"],"names":["slice","createSlice","name","initialState","formErrors","reducers","setFormErrors","state","action","payload","resetFormErrors","actions","selectFormErrors","error","setUsersForumsInLocalStorage","usersForums","stringifiedData","JSON","stringify","localStorage","setItem","getUsersForums","userData","a","axios","post","response","data","console","storeUsersForumsInLocalStorage","isAuthenticated","setAuthStatus","resetAuthStatus","loginUser","history","dispatch","signInUser","then","decodedToken","grabAndSetUsersForumsInLocalStorage","length","firstForumId","_id","push","err","redirectUserBasedOnForumCount","catch","jwt_decode","token","Error","userId","logoutUser","get","clear","selectAuthStatus","auth","passwordExists","setPublic","setPrivate","resetPrivacyStatus","selectPasswordExists","forumAuth","rootReducer","combineReducers","authReducer","errorsReducer","forumAuthReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","h1","fontFamily","fontSize","fontWeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","overline","caption","useStyles","makeStyles","container","backgroundColor","padding","spacing","box","display","flexDirection","height","justifyContent","alignItems","header","color","marginBottom","subtitle","login","signup","borderColor","linkStyle","textDecoration","width","Landing","classes","Container","component","maxWidth","className","CssBaseline","Grid","item","xs","sm","Box","Typography","variant","to","style","Button","type","fullWidth","root","paper","form","marginTop","submit","margin","Login","props","useDispatch","useSelector","useState","username","password","errors","user","setUser","handleChange","event","target","id","value","Paper","elevation","noValidate","onSubmit","preventDefault","userObj","TextField","required","label","autoFocus","onChange","helperText","justify","onClick","Signup","email","password2","newUser","PageNotFound","PrivateRoute","Component","rest","render","window","JSDOM","DOMPurify","createDOMPurify","buttonContainer","CreatePost","postContent","setPostContent","postTitle","setPostTitle","showCreatePost","setShowCreatePost","textFieldLabel","setTextFieldLabel","disableToggleShowCreatePost","setDisableToggleShowCreatePost","toggleShowCreatePost","useEffect","clsx","sanitizedPostContent","sanitize","sanitizedPostTitle","title","content","forumId","updateForumPosts","placeholder","IconButton","position","top","right","borderBottom","borderRight","borderLeft","borderTop","zIndex","link","ProfilePopup","fullName","userInfo","setUserInfo","visibility","showPopup","Avatar","Divider","drawerWidth","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","appBarNav","appBarToolbar","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","profileIcon","linkStyles","listItem","AppBarAndDrawer","useTheme","open","setOpen","forumName","setForumName","parse","getItem","setShowPopup","AppBar","Toolbar","aria-label","edge","disableRipple","disableFocusRipple","size","alt","src","Drawer","direction","List","map","forum","forumLink","ListItem","ListItemAvatar","ListItemText","postInfoMargin","postInfoText","titleMargin","iconStyle","comments","Post","contentMarkup","__html","dateDifference","moment","publishDate","fromNow","parentForumName","author","dangerouslySetInnerHTML","numOfComments","noPosts","noPostsText","PostsList","forumPosts","postLink","parentForumId","parentForum","postId","authorId","date","MembersPanel","forumMembers","setForumMembers","member","mixins","flexGrow","Forum","useLocation","pathname","split","setForumPosts","Join","setForum","forumData","isPublic","userIsAuthenticated","joinForum","toggle","gridItem","paddingBottom","warningMessageContainer","bottom","warningMessage","borderRadius","warningText","iconStyles","Create","changePrivacyStatus","currentTarget","limit","newForumLink","createForum","heading","grid","GetStarted","CreateComment","commentContent","setCommentContent","purifiedCommentContent","updatePostCommentsAndNumOfComments","comment","commentInfoMargin","commentInfoText","Comment","CommentsList","postComments","PostPage","setPost","setParentForumId","setPostComments","setNumOfComments","App","validateJWT","ThemeProvider","exact","path","Boolean","location","hostname","match","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.43785e75.chunk.js","sourcesContent":["// Redux\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n    name: 'error',\n    initialState: {\n        formErrors: {},\n    },\n    reducers: {\n        setFormErrors: (state, action) => {\n            state.formErrors = action.payload;\n        },\n        resetFormErrors: (state) => {\n            state.formErrors = {};\n        },\n    },\n});\n\n// Export Actions\nexport const { setFormErrors, resetFormErrors } = slice.actions;\n\n// Selectors\nexport function selectFormErrors(state) {\n    return state.error.formErrors;\n}\n\nexport default slice.reducer;\n","// Dependencies\nimport axios from 'axios';\n\n// Set Users Forums in Local Storage\nfunction setUsersForumsInLocalStorage(usersForums) {\n    // Store Users Forums in Local Storage\n    const stringifiedData = JSON.stringify(usersForums);\n\n    localStorage.setItem('usersForums', stringifiedData);\n}\n\n// Get Users Forums from Database\nasync function getUsersForums(userData) {\n    try {\n        const response = await axios.post(\n            '/api/forums/getUsersForums',\n            userData\n        );\n\n        const usersForums = response.data;\n\n        return usersForums;\n    } catch (err) {\n        console.error(err);\n    }\n}\n\n// Consolidate Both Actions (i.e. Get and Set) into One Function\nasync function storeUsersForumsInLocalStorage(userData) {\n    try {\n        const usersForums = await getUsersForums(userData);\n\n        setUsersForumsInLocalStorage(usersForums);\n\n        return usersForums;\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport default storeUsersForumsInLocalStorage;\n","// Dependencies\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\n// Redux\nimport { createSlice } from '@reduxjs/toolkit';\nimport { setFormErrors, resetFormErrors } from './errorsSlice';\n\n// Utilities\nimport storeUsersForumsInLocalStorage from '../../utils/storeUsersForumsInLocalStorage';\n\nexport const slice = createSlice({\n    name: 'auth',\n    initialState: {\n        isAuthenticated: false,\n    },\n    reducers: {\n        setAuthStatus: (state) => {\n            state.isAuthenticated = true;\n        },\n        resetAuthStatus: (state) => {\n            state.isAuthenticated = false;\n        },\n    },\n});\n\n// Export Actions\nexport const { setAuthStatus, resetAuthStatus } = slice.actions;\n\n// Login User\nexport function loginUser(userData, history) {\n    return function thunk(dispatch) {\n        signInUser(userData, dispatch)\n            .then((decodedToken) => {\n                return grabAndSetUsersForumsInLocalStorage(decodedToken);\n            })\n            .then((usersForums) => {\n                return redirectUserBasedOnForumCount(usersForums, history);\n            })\n            .catch((err) => console.error('@loginUser\\n', err));\n    };\n}\n\nasync function signInUser(userData, dispatch) {\n    try {\n        const response = await axios.post('/api/users/login', userData);\n\n        // On Successful Login, Reset Form Errors and Set Authentication Status for Persistent Login\n        dispatch(resetFormErrors());\n        dispatch(setAuthStatus());\n\n        const decodedToken = jwt_decode(response.data.token);\n        return decodedToken;\n    } catch (err) {\n        dispatch(setFormErrors(err.response.data));\n\n        throw new Error('@signInUser');\n    }\n}\n\nasync function grabAndSetUsersForumsInLocalStorage(decodedToken) {\n    try {\n        const usersForums = await storeUsersForumsInLocalStorage({\n            userId: decodedToken.userId,\n        });\n\n        return usersForums;\n    } catch (err) {\n        console.error('@grabAndSetUsersForumsInLocalStorage\\n', err);\n    }\n}\n\nfunction redirectUserBasedOnForumCount(usersForums, history) {\n    try {\n        const forumsExist = usersForums.length;\n\n        if (forumsExist) {\n            const firstForumId = usersForums[0]._id;\n\n            history.push(`/forum/${firstForumId}`);\n        } else {\n            history.push('/getStarted');\n        }\n    } catch (err) {\n        console.error('@redirectUserBasedOnForumCount\\n', err);\n    }\n}\n\n// Register User\nexport function signupUser(userData, history) {\n    return function thunk(dispatch) {\n        axios\n            .post('/api/users/signup', userData)\n            .then(() => {\n                // On Successful Registration, Reset Form Errors\n                dispatch(resetFormErrors());\n\n                history.push('/login');\n            })\n            .catch((err) => dispatch(setFormErrors(err.response.data)));\n    };\n}\n\n// Log User Out\nexport function logoutUser() {\n    return function thunk(dispatch) {\n        // Invalidate Cookies (i.e. JWT)\n        axios\n            .get('/api/users/deleteJWTCookie')\n            .then(() => {\n                // Clear Local Storage (i.e. usersForums)\n                localStorage.clear();\n\n                // Reset Authentication Status\n                dispatch(resetAuthStatus());\n            })\n            .catch((err) => console.error(err));\n    };\n}\n\n// Selectors\nexport function selectAuthStatus(state) {\n    return state.auth.isAuthenticated;\n}\n\nexport default slice.reducer;\n","// Dependencies\nimport axios from 'axios';\n\n// Redux\nimport { createSlice } from '@reduxjs/toolkit';\n\nimport { setFormErrors, resetFormErrors } from './errorsSlice';\n\n// Utilities\nimport storeUsersForumsInLocalStorage from '../../utils/storeUsersForumsInLocalStorage';\n\nexport const slice = createSlice({\n    name: 'forumAuth',\n    initialState: {\n        passwordExists: false,\n    },\n    reducers: {\n        setPublic: (state) => {\n            state.passwordExists = false;\n        },\n        setPrivate: (state) => {\n            state.passwordExists = true;\n        },\n        resetPrivacyStatus: (state) => {\n            state.passwordExists = false;\n        },\n    },\n});\n\n// Export Actions\nexport const { setPublic, setPrivate, resetPrivacyStatus } = slice.actions;\n\n// Create Forum\nexport function createForum(forumData, history) {\n    return function thunk(dispatch) {\n        axios\n            .post('/api/forums/create', forumData)\n            .then((response) => {\n                // On Successful Forum Creation, Reset Form Errors\n                dispatch(resetFormErrors());\n\n                const newForumLink = `/forum/${response.data.forumId}`;\n\n                // Save user's new forums list to local storage.\n                storeUsersForumsInLocalStorage({ userId: response.data.userId })\n                    .then(() => history.push(newForumLink))\n                    .catch((err) => console.error(err));\n            })\n            .catch((err) => dispatch(setFormErrors(err.response.data)));\n    };\n}\n\n// Join Forum\nexport function joinForum(forumData, history) {\n    return function thunk(dispatch) {\n        axios\n            .post('/api/forums/join', forumData)\n            .then((response) => {\n                // On Successful Forum Join, Reset Forum Errors\n                dispatch(resetFormErrors());\n\n                // Save user's new forums list to local storage.\n                storeUsersForumsInLocalStorage({\n                    userId: response.data.userId,\n                })\n                    .then(() => {\n                        const isPublic = response.data.isPublic;\n                        const forumId = response.data.forumId;\n\n                        if (isPublic) {\n                            dispatch(setPublic());\n\n                            history.push(`/forum/${forumId}`);\n                        } else {\n                            const userIsAuthenticated =\n                                response.data.userIsAuthenticated;\n\n                            if (userIsAuthenticated) {\n                                history.push(`/forum/${forumId}`);\n                            } else {\n                                dispatch(setPrivate());\n                            }\n                        }\n                    })\n                    .catch((err) => console.error(err));\n            })\n            .catch((err) => dispatch(setFormErrors(err.response.data)));\n    };\n}\n\n// Selectors\nexport function selectPasswordExists(state) {\n    return state.forumAuth.passwordExists;\n}\n\nexport default slice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { combineReducers } from 'redux';\n\nimport authReducer from './slices/authSlice';\nimport errorsReducer from './slices/errorsSlice';\nimport forumAuthReducer from './slices/forumAuthSlice';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    error: errorsReducer,\n    forumAuth: forumAuthReducer,\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware({\n        serializableCheck: false,\n    }),\n});\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// Set Baseline Typography\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#607fcc',\n            main: '#29539b',\n            dark: '#002b6c',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ffc947',\n            main: '#ff9800',\n            dark: '#c66900',\n            contrastText: '#fff',\n        },\n    },\n    typography: {\n        h1: {\n            fontFamily: 'Poppins',\n            fontSize: 93,\n            fontWeight: 300,\n            letterSpacing: -1.5,\n        },\n        h2: {\n            fontFamily: 'Poppins',\n            fontSize: 58,\n            fontWeight: 300,\n            letterSpacing: -0.5,\n        },\n        h3: {\n            fontFamily: 'Poppins',\n            fontSize: 46,\n            fontWeight: 400,\n            letterSpacing: 0,\n        },\n        h4: {\n            fontFamily: 'Poppins',\n            fontSize: 33,\n            fontWeight: 400,\n            letterSpacing: 0.25,\n        },\n        h5: {\n            fontFamily: 'Poppins',\n            fontSize: 26,\n            fontWeight: 600,\n            letterSpacing: 0,\n        },\n        h6: {\n            fontFamily: 'Poppins',\n            fontSize: 19,\n            fontWeight: 600,\n            letterSpacing: 0.15,\n        },\n        subtitle1: {\n            fontFamily: 'Poppins',\n            fontSize: 15,\n            fontWeight: 400,\n            letterSpacing: 0.15,\n        },\n        subtitle2: {\n            fontFamily: 'Poppins',\n            fontSize: 13,\n            fontWeight: 500,\n            letterSpacing: 0.1,\n        },\n        body1: {\n            fontFamily: 'Roboto',\n            fontSize: 16,\n            fontWeight: 400,\n            letterSpacing: 0.5,\n        },\n        body2: {\n            fontFamily: 'Roboto',\n            fontSize: 14,\n            fontWeight: 400,\n            letterSpacing: 0.25,\n        },\n        button: {\n            fontFamily: 'Roboto',\n            fontSize: 14,\n            fontWeight: 500,\n            letterSpacing: 1.25,\n        },\n        overline: {\n            fontFamily: 'Roboto',\n            fontSize: 10,\n            fontWeight: 400,\n            letterSpacing: 1.5,\n        },\n        caption: {\n            fontFamily: 'Roboto',\n            fontSize: 12,\n            fontWeight: 400,\n            letterSpacing: 0.4,\n        },\n    },\n});\n\nexport default theme;\n","// Dependencies\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Material UI Styles\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        backgroundColor: '#1E3B70',\n        padding: theme.spacing(0, 10),\n    },\n    box: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n    },\n    header: {\n        color: '#ffffff',\n        marginBottom: theme.spacing(3),\n    },\n    subtitle: {\n        color: '#ffffff',\n        fontSize: 20,\n        marginBottom: theme.spacing(5),\n    },\n    login: {\n        backgroundColor: '#ffffff',\n        color: theme.palette.primary.main,\n        padding: theme.spacing(1, 0),\n    },\n    signup: {\n        borderColor: '#ffffff',\n        color: '#ffffff',\n        padding: theme.spacing(1, 0),\n    },\n}));\n\nconst linkStyle = {\n    textDecoration: 'none',\n    width: '100%',\n};\n\nfunction Landing() {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xl\" className={classes.container}>\n            <CssBaseline />\n            <Grid container>\n                <Grid item xs={12} sm={6}>\n                    <Box className={classes.box}>\n                        <Typography\n                            variant=\"h4\"\n                            component=\"h1\"\n                            className={classes.header}\n                        >\n                            The Forum\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            className={classes.subtitle}\n                        >\n                            A structured approach to the chaotic group chat.\n                        </Typography>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12} sm={6}>\n                                <Link to=\"/login\" style={linkStyle}>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        className={classes.login}\n                                    >\n                                        Log In\n                                    </Button>\n                                </Link>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <Link to=\"/signup\" style={linkStyle}>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        className={classes.signup}\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default Landing;\n","// Dependencies\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginUser } from '../../redux/slices/authSlice';\nimport {\n    selectFormErrors,\n    resetFormErrors,\n} from '../../redux/slices/errorsSlice';\n\n// Material UI Styles\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#1E3B70',\n    },\n    box: {\n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n    },\n    paper: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(4, 3),\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(2),\n    },\n    submit: {\n        margin: theme.spacing(3, 0),\n        padding: theme.spacing(2, 0),\n    },\n}));\n\n// Custom React Styles\nconst linkStyle = {\n    textDecoration: 'none',\n};\n\nfunction Login(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // Redux Handles\n    const dispatch = useDispatch();\n    const formErrors = useSelector(selectFormErrors);\n\n    // React Handles\n    const [user, setUser] = useState({\n        username: '',\n        password: '',\n        errors: {},\n    });\n\n    function handleChange(event) {\n        setUser({\n            ...user,\n            [event.target.id]: event.target.value,\n        });\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const userObj = {\n            username: user.username,\n            password: user.password,\n        };\n\n        dispatch(loginUser(userObj, props.history));\n    }\n\n    return (\n        <Box component=\"main\" className={classes.root}>\n            <Container maxWidth=\"xs\">\n                <CssBaseline />\n                <Box className={classes.box}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Log in\n                        </Typography>\n                        <form\n                            className={classes.form}\n                            noValidate\n                            onSubmit={handleSubmit}\n                        >\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"username\"\n                                label=\"Username\"\n                                id=\"username\"\n                                autoFocus\n                                onChange={handleChange}\n                                value={user.username}\n                                error={formErrors.username ? true : false}\n                                helperText={\n                                    formErrors.username\n                                        ? formErrors.username\n                                        : null\n                                }\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                onChange={handleChange}\n                                value={user.password}\n                                error={formErrors.password ? true : false}\n                                helperText={\n                                    formErrors.password\n                                        ? formErrors.password\n                                        : null\n                                }\n                            />\n                            <Button\n                                variant=\"contained\"\n                                type=\"submit\"\n                                fullWidth\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign In\n                            </Button>\n                            <Grid container justify=\"center\">\n                                <Grid item>\n                                    <Link\n                                        to=\"/signup\"\n                                        onClick={() =>\n                                            dispatch(resetFormErrors())\n                                        }\n                                        style={linkStyle}\n                                    >\n                                        <Typography\n                                            variant=\"body2\"\n                                            color=\"primary\"\n                                        >\n                                            Don't have an account? Sign Up\n                                        </Typography>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Paper>\n                </Box>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Login;\n","// Dependencies\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { signupUser } from '../../redux/slices/authSlice';\nimport {\n    selectFormErrors,\n    resetFormErrors,\n} from '../../redux/slices/errorsSlice';\n\n// Material UI Styles\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#1E3B70',\n    },\n    box: {\n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n    },\n    paper: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(4, 3),\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(2),\n    },\n    submit: {\n        margin: theme.spacing(3, 0),\n        padding: theme.spacing(2, 0),\n    },\n}));\n\n// Custom React Styles\nconst linkStyle = {\n    textDecoration: 'none',\n};\n\nfunction Signup(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // Redux Handles\n    const dispatch = useDispatch();\n    const formErrors = useSelector(selectFormErrors);\n\n    // React Handles\n    const [user, setUser] = useState({\n        name: '',\n        username: '',\n        email: '',\n        password: '',\n        password2: '',\n    });\n\n    function handleChange(event) {\n        setUser({\n            ...user,\n            [event.target.id]: event.target.value,\n        });\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const newUser = {\n            name: user.name,\n            username: user.username,\n            email: user.email,\n            password: user.password,\n            password2: user.password2,\n        };\n\n        dispatch(signupUser(newUser, props.history));\n    }\n\n    return (\n        <Box component=\"main\" className={classes.root}>\n            <Container maxWidth=\"xs\">\n                <CssBaseline />\n                <Box className={classes.box}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign up\n                        </Typography>\n                        <form\n                            className={classes.form}\n                            noValidate\n                            onSubmit={handleSubmit}\n                        >\n                            <TextField\n                                variant=\"outlined\"\n                                name=\"name\"\n                                required\n                                fullWidth\n                                label=\"Name\"\n                                id=\"name\"\n                                margin=\"normal\"\n                                autoFocus\n                                onChange={handleChange}\n                                value={user.name}\n                                error={formErrors.name ? true : false}\n                                helperText={\n                                    formErrors.name ? formErrors.name : null\n                                }\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                name=\"username\"\n                                required\n                                fullWidth\n                                label=\"Username\"\n                                id=\"username\"\n                                margin=\"normal\"\n                                onChange={handleChange}\n                                value={user.username}\n                                error={formErrors.username ? true : false}\n                                helperText={\n                                    formErrors.username\n                                        ? formErrors.username\n                                        : null\n                                }\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                name=\"email\"\n                                required\n                                fullWidth\n                                label=\"Email Address\"\n                                id=\"email\"\n                                margin=\"normal\"\n                                onChange={handleChange}\n                                value={user.email}\n                                error={formErrors.email ? true : false}\n                                helperText={\n                                    formErrors.email ? formErrors.email : null\n                                }\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                name=\"password\"\n                                required\n                                fullWidth\n                                label=\"Password\"\n                                id=\"password\"\n                                type=\"password\"\n                                margin=\"normal\"\n                                onChange={handleChange}\n                                value={user.password}\n                                error={formErrors.password ? true : false}\n                                helperText={\n                                    formErrors.password\n                                        ? formErrors.password\n                                        : null\n                                }\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign Up\n                            </Button>\n                            <Grid container justify=\"center\">\n                                <Grid item>\n                                    <Link\n                                        to=\"/login\"\n                                        onClick={() =>\n                                            dispatch(resetFormErrors())\n                                        }\n                                        style={linkStyle}\n                                    >\n                                        <Typography\n                                            variant=\"body2\"\n                                            color=\"primary\"\n                                        >\n                                            Already have an account? Log in\n                                        </Typography>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Paper>\n                </Box>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Signup;\n","// Dependencies\nimport React from 'react';\n\n// Material UI Styles\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        backgroundColor: '#1E3B70',\n        padding: theme.spacing(0, 10),\n    },\n    box: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n    },\n    header: {\n        color: '#ffffff',\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nfunction PageNotFound() {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xl\" className={classes.container}>\n            <CssBaseline />\n            <Grid container>\n                <Grid item xs={12} sm={6}>\n                    <Box className={classes.box}>\n                        <Typography\n                            variant=\"h4\"\n                            component=\"h1\"\n                            className={classes.header}\n                        >\n                            Page Not Found\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default PageNotFound;\n","// Dependencies\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n// Redux\nimport { useSelector } from 'react-redux';\nimport { selectAuthStatus } from '../../redux/slices/authSlice';\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const isAuthenticated = useSelector(selectAuthStatus);\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )\n            }\n        />\n    );\n}\n\nexport default PrivateRoute;\n","import createDOMPurify from 'dompurify';\nimport { JSDOM } from 'jsdom';\n\nconst window = new JSDOM('').window;\nconst DOMPurify = createDOMPurify(window);\n\nexport default DOMPurify;\n","// Dependencies\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// Material UI Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\n// Custom Styles and Modules\nimport './CreatePost.css';\nimport DOMPurify from '../../utils/domPurifyConfig';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n    },\n    margin: {\n        marginBottom: theme.spacing(3),\n    },\n    buttonContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n}));\n\nfunction CreatePost(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // Handle New Post Input\n    const [postContent, setPostContent] = useState('');\n    const [postTitle, setPostTitle] = useState('');\n\n    function handleTitleChange(event) {\n        setPostTitle(event.target.value);\n    }\n\n    // Handle Form Submit\n    function handleFormSubmit(event) {\n        event.preventDefault();\n\n        const sanitizedPostContent = DOMPurify.sanitize(postContent);\n        const sanitizedPostTitle = DOMPurify.sanitize(postTitle);\n\n        axios\n            .post('/api/posts/create', {\n                title: sanitizedPostTitle,\n                content: sanitizedPostContent,\n                forumId: props.forumId,\n            })\n            .then(() => {\n                // Update PostsList\n                props.updateForumPosts();\n            })\n            .catch((err) => console.error(err));\n\n        // Reset Form Handles\n        setPostContent('');\n        setPostTitle('');\n        setShowCreatePost(!showCreatePost);\n        setDisableToggleShowCreatePost(!disableToggleShowCreatePost);\n    }\n\n    // Handle Form View Toggle\n    const [showCreatePost, setShowCreatePost] = useState(false);\n    const [textFieldLabel, setTextFieldLabel] = useState('Create new post');\n    const [\n        disableToggleShowCreatePost,\n        setDisableToggleShowCreatePost,\n    ] = useState(false);\n\n    useEffect(() => {\n        if (showCreatePost) {\n            setTextFieldLabel('Title');\n        } else {\n            setTextFieldLabel('Create new post');\n        }\n    }, [showCreatePost]);\n\n    function toggleShowCreatePost() {\n        setShowCreatePost(!showCreatePost);\n        setDisableToggleShowCreatePost(!disableToggleShowCreatePost);\n    }\n\n    return (\n        <Grid item xs={12}>\n            <Paper className={clsx(classes.paper, classes.margin)}>\n                <Box>\n                    {showCreatePost && (\n                        <Typography variant=\"h6\" className={classes.margin}>\n                            Create New Post\n                        </Typography>\n                    )}\n                    <form noValidate onSubmit={handleFormSubmit}>\n                        <TextField\n                            className={clsx({\n                                [classes.margin]: showCreatePost,\n                            })}\n                            id=\"outlined-basic\"\n                            label={textFieldLabel}\n                            variant=\"outlined\"\n                            fullWidth\n                            value={postTitle}\n                            onChange={handleTitleChange}\n                            onClick={\n                                !disableToggleShowCreatePost\n                                    ? toggleShowCreatePost\n                                    : null\n                            }\n                            required={showCreatePost}\n                        />\n                        {showCreatePost && (\n                            <ReactQuill\n                                className={classes.margin}\n                                theme=\"snow\"\n                                value={postContent}\n                                onChange={setPostContent}\n                                placeholder=\"Create a post...\"\n                            />\n                        )}\n                        {showCreatePost && (\n                            <Box className={classes.buttonContainer}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    Post\n                                </Button>\n                                <IconButton onClick={toggleShowCreatePost}>\n                                    <ExpandLessIcon />\n                                </IconButton>\n                            </Box>\n                        )}\n                    </form>\n                </Box>\n            </Paper>\n        </Grid>\n    );\n}\n\nexport default CreatePost;\n","// Dependencies\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\nimport { logoutUser } from '../../redux/slices/authSlice';\n\n// Material UI Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        '&::before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '-10px',\n            right: '18px',\n            borderBottom: '5px solid white',\n            borderRight: '5px solid transparent',\n            borderLeft: '5px solid transparent',\n            borderTop: '5px solid transparent',\n            zIndex: '10',\n        },\n        position: 'absolute',\n        top: theme.spacing(10),\n        right: theme.spacing(3),\n    },\n    padding: {\n        padding: theme.spacing(2),\n    },\n    link: {\n        color: 'black',\n        textDecoration: 'none',\n    },\n}));\n\nfunction ProfilePopup(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // React Handles\n    const [userInfo, setUserInfo] = useState({\n        fullName: '',\n        username: '',\n    });\n\n    // Redux Handles\n    const dispatch = useDispatch();\n\n    // Grab User Info\n    useEffect(() => {\n        axios\n            .get('/api/users/getUsernameInfo')\n            .then((response) => {\n                setUserInfo({\n                    ...response.data,\n                });\n            })\n            .catch((err) => console.error(err));\n    }, []);\n\n    // Handle Logout\n    function handleLogout() {\n        dispatch(logoutUser());\n    }\n\n    return (\n        <Paper\n            className={classes.paper}\n            style={{ visibility: props.showPopup ? 'visible' : 'hidden' }}\n        >\n            <Box className={classes.padding}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Avatar />\n                    </Grid>\n                    <Grid item>\n                        <Typography>{userInfo.fullName}</Typography>\n                        <Typography>@{userInfo.username}</Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n\n            <Divider />\n\n            <Box className={classes.padding}>\n                <Button fullWidth onClick={handleLogout}>\n                    Log out\n                </Button>\n            </Box>\n        </Paper>\n    );\n}\n\nexport default ProfilePopup;\n","// Dependencies\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// React Components\nimport ProfilePopup from './ProfilePopup';\n\n// Material UI Styles\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport GroupIcon from '@material-ui/icons/Group';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        height: theme.spacing(10),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    appBarNav: {\n        width: '100%',\n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    appBarToolbar: {\n        height: '100%',\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(9),\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        height: theme.spacing(10),\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    profileIcon: {\n        position: 'relative',\n    },\n    linkStyles: {\n        color: 'black',\n        textDecoration: 'none',\n    },\n    listItem: {\n        padding: theme.spacing(2),\n    },\n}));\n\nfunction AppBarAndDrawer(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n    const theme = useTheme();\n\n    // React Handles\n    const [open, setOpen] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    // Backend Call for Current Forum Name\n    const forumId = props.forumId;\n    const [forumName, setForumName] = useState(null);\n\n    useEffect(() => {\n        axios\n            .post('/api/forums/getForumName', { forumId })\n            .then((response) => {\n                const forumName = response.data;\n\n                setForumName(forumName);\n            })\n            .catch((err) => console.error(err));\n    }, [forumId]);\n\n    // Grab User's Forums from Local Storage\n    const usersForums = JSON.parse(localStorage.getItem('usersForums'));\n\n    // Profile Popup\n    const [showPopup, setShowPopup] = useState(false);\n\n    function showProfilePopup() {\n        setShowPopup(!showPopup);\n    }\n\n    return (\n        <Box>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar className={classes.appBarToolbar}>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    {forumName && (\n                        <Typography variant=\"h6\">{forumName}</Typography>\n                    )}\n\n                    <Box className={classes.appBarNav}>\n                        <Box>\n                            <IconButton\n                                disableRipple\n                                disableFocusRipple\n                                size=\"small\"\n                                className={classes.profileIcon}\n                                onClick={showProfilePopup}\n                            >\n                                <Avatar alt=\"forum profile picture\" src=\"\" />\n                            </IconButton>\n                            <ProfilePopup showPopup={showPopup} />\n                        </Box>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n\n                <Divider />\n\n                <List>\n                    {usersForums.map((forum) => {\n                        const forumLink = `/forum/${forum._id}`;\n                        const forumName = forum.name;\n\n                        return (\n                            <Link\n                                to={forumLink}\n                                key={forum._id}\n                                className={classes.linkStyles}\n                            >\n                                <ListItem className={classes.listItem}>\n                                    <ListItemAvatar>\n                                        <Avatar alt={forumName} src=\"\">\n                                            <GroupIcon />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={forumName} />\n                                </ListItem>\n                            </Link>\n                        );\n                    })}\n\n                    <Link to=\"/join\" className={classes.linkStyles}>\n                        <ListItem className={classes.listItem}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <AddIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"Add Forum\" />\n                        </ListItem>\n                    </Link>\n                </List>\n            </Drawer>\n        </Box>\n    );\n}\n\nexport default AppBarAndDrawer;\n","// Dependencies\nimport React from 'react';\nimport moment from 'moment';\n\n// Material UI Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\n\nconst useStyles = makeStyles((theme) => ({\n    post: {\n        padding: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    postInfoMargin: {\n        marginBottom: theme.spacing(2),\n    },\n    postInfoText: {\n        color: 'gray',\n        fontSize: '14px',\n    },\n    titleMargin: {\n        marginBottom: theme.spacing(1),\n    },\n    iconStyle: {\n        fontSize: 20,\n        marginRight: theme.spacing(1),\n        color: 'gray',\n    },\n    comments: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: theme.spacing(4),\n    },\n}));\n\nfunction Post(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // React Implementation of Setting Inner HTML\n    const contentMarkup = {\n        __html: props.content,\n    };\n\n    // Published Date Difference\n    const dateDifference = moment(props.publishDate).fromNow();\n\n    return (\n        <Grid item xs={12}>\n            <Paper className={classes.post}>\n                <Box className={classes.postInfoMargin}>\n                    <Typography\n                        variant=\"body1\"\n                        className={classes.postInfoText}\n                    >\n                        {props.parentForumName} • Posted by {props.author}{' '}\n                        {dateDifference}\n                    </Typography>\n                </Box>\n                <Box>\n                    <Typography variant=\"h5\" className={classes.titleMargin}>\n                        {props.title}\n                    </Typography>\n                    <Typography\n                        variant=\"body1\"\n                        component=\"div\"\n                        dangerouslySetInnerHTML={contentMarkup}\n                    ></Typography>\n                </Box>\n                <Box>\n                    <Box className={classes.comments}>\n                        <ModeCommentIcon className={classes.iconStyle} />{' '}\n                        {props.numOfComments}\n                    </Box>\n                </Box>\n            </Paper>\n        </Grid>\n    );\n}\n\nexport default Post;\n","// Dependencies\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// React Components\nimport Post from './Post';\n\n// Material UI Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    noPosts: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: theme.spacing(3),\n    },\n    noPostsText: {\n        fontWeight: '500',\n        color: 'gray',\n    },\n    linkStyle: {\n        textDecoration: 'none',\n    },\n}));\n\nfunction PostsList(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12}>\n            {props.forumPosts && props.forumPosts.length ? (\n                props.forumPosts.map((post) => {\n                    const postLink = `/post/${post._id}`;\n\n                    return (\n                        <Link\n                            to={postLink}\n                            className={classes.linkStyle}\n                            key={post._id}\n                        >\n                            <Post\n                                parentForumId={post.parentForum._id}\n                                parentForumName={post.parentForum.name}\n                                postId={post._id}\n                                title={post.title}\n                                content={post.content}\n                                author={post.author.name}\n                                authorId={post.author._id}\n                                publishDate={post.date}\n                                numOfComments={post.comments.length}\n                            />\n                        </Link>\n                    );\n                })\n            ) : (\n                <Paper className={classes.noPosts}>\n                    <Typography variant=\"body1\" className={classes.noPostsText}>\n                        *tumbleweeds passing through the digital horizon*\n                    </Typography>\n                </Paper>\n            )}\n        </Grid>\n    );\n}\n\nexport default PostsList;\n","// Dependencies\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Material UI Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n    },\n    margin: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nfunction MembersPanel(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // React Handles\n    const forumId = props.forumId;\n    const [forumMembers, setForumMembers] = useState(null);\n\n    useEffect(() => {\n        axios\n            .post('/api/forums/getForumMembers', { forumId })\n            .then((response) => {\n                const forumMembers = response.data;\n\n                setForumMembers([...forumMembers]);\n            })\n            .catch((err) => console.error(err));\n    }, [forumId]);\n\n    return (\n        <Paper className={classes.paper}>\n            <Typography variant=\"h6\">Members</Typography>\n            <Divider className={classes.margin} />\n            {forumMembers &&\n                forumMembers.map((member) => {\n                    return (\n                        <Typography\n                            variant=\"body1\"\n                            key={member._id}\n                            className={classes.margin}\n                        >\n                            {member.name}\n                        </Typography>\n                    );\n                })}\n        </Paper>\n    );\n}\n\nexport default MembersPanel;\n","// Dependencies\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// React Components\nimport CreatePost from './CreatePost';\nimport AppBarAndDrawer from './AppBarAndDrawer';\nimport PostsList from './PostsList';\nimport MembersPanel from './MembersPanel';\n\nimport { useForumId } from '../../utils/customHooks';\n\n// Material UI Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        // required to have main content below toolbar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(5, 3, 3, 3),\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction Forum() {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // React Handles\n    const forumId = useForumId();\n    const [forumPosts, setForumPosts] = useState(null);\n\n    useEffect(() => {\n        axios\n            .post('/api/forums/getForumPosts', { forumId })\n            .then((response) => {\n                const forumPosts = response.data;\n\n                setForumPosts(forumPosts);\n            })\n            .catch((err) => console.error(err));\n    }, [forumId]);\n\n    function updateForumPosts() {\n        axios\n            .post('/api/forums/getForumPosts', { forumId })\n            .then((response) => {\n                const forumPosts = response.data;\n\n                setForumPosts(forumPosts);\n            })\n            .catch((err) => console.error(err));\n    }\n\n    return (\n        <Box className={classes.root}>\n            <CssBaseline />\n            {forumId && <AppBarAndDrawer forumId={forumId} />}\n\n            <Box component=\"main\" className={classes.content}>\n                <div className={classes.toolbar} />\n\n                <Grid container spacing={3}>\n                    <Grid item container xs={12} sm={8}>\n                        {forumId && (\n                            <CreatePost\n                                forumId={forumId}\n                                updateForumPosts={updateForumPosts}\n                            />\n                        )}\n\n                        {forumPosts && <PostsList forumPosts={forumPosts} />}\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        {forumId && <MembersPanel forumId={forumId} />}\n                    </Grid>\n                </Grid>\n            </Box>\n        </Box>\n    );\n}\n\nexport default Forum;\n","import { useLocation } from 'react-router-dom';\n\nexport function useForumId() {\n    const location = useLocation();\n\n    const forumId = location.pathname.split('/')[2];\n\n    return forumId;\n}\n\nexport function usePostId() {\n    const location = useLocation();\n\n    const postId = location.pathname.split('/')[2];\n\n    return postId;\n}\n","// Dependencies\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectFormErrors,\n    resetFormErrors,\n} from '../../redux/slices/errorsSlice';\nimport {\n    joinForum,\n    resetPrivacyStatus,\n    selectPasswordExists,\n} from '../../redux/slices/forumAuthSlice';\n\n// Material UI Styles\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#1E3B70',\n    },\n    box: {\n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n    },\n    paper: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(4, 3),\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(2),\n    },\n    submit: {\n        margin: theme.spacing(3, 0),\n        padding: theme.spacing(2, 0),\n    },\n}));\n\n// Custom React Styles\nconst linkStyle = {\n    textDecoration: 'none',\n};\n\nfunction Join(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // Redux Handles\n    const dispatch = useDispatch();\n    const passwordExists = useSelector(selectPasswordExists);\n    const formErrors = useSelector(selectFormErrors);\n\n    // React Handles\n    const [forum, setForum] = useState({\n        name: '',\n        password: '',\n        errors: {},\n    });\n\n    function handleChange(event) {\n        setForum({\n            ...forum,\n            [event.target.id]: event.target.value,\n        });\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const forumData = {\n            name: forum.name,\n        };\n\n        // Check Store for Forum's Privacy Status - If Private, Pass Password into Payload\n        if (passwordExists) {\n            forumData.password = forum.password;\n        }\n\n        dispatch(joinForum(forumData, props.history));\n    }\n\n    return (\n        <Box component=\"main\" className={classes.root}>\n            <Container maxWidth=\"xs\">\n                <CssBaseline />\n                <Box className={classes.box}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Join a Forum\n                        </Typography>\n                        <form\n                            className={classes.form}\n                            noValidate\n                            onSubmit={handleSubmit}\n                        >\n                            <TextField\n                                variant=\"outlined\"\n                                name=\"name\"\n                                required\n                                fullWidth\n                                label=\"Forum Name\"\n                                id=\"name\"\n                                margin=\"normal\"\n                                autoFocus\n                                onChange={handleChange}\n                                value={forum.name}\n                                error={formErrors.forumName ? true : false}\n                                helperText={\n                                    formErrors.forumName\n                                        ? formErrors.forumName\n                                        : null\n                                }\n                            />\n                            {passwordExists && (\n                                <TextField\n                                    variant=\"outlined\"\n                                    name=\"password\"\n                                    required\n                                    fullWidth\n                                    label=\"Password\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    margin=\"normal\"\n                                    onChange={handleChange}\n                                    value={forum.password}\n                                    error={formErrors.password ? true : false}\n                                    helperText={\n                                        formErrors.password\n                                            ? formErrors.password\n                                            : null\n                                    }\n                                />\n                            )}\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Join\n                            </Button>\n                            <Grid container justify=\"center\">\n                                <Grid item>\n                                    <Link\n                                        to=\"/create\"\n                                        onClick={() => {\n                                            dispatch(resetFormErrors());\n                                            dispatch(resetPrivacyStatus());\n                                        }}\n                                        style={linkStyle}\n                                    >\n                                        <Typography\n                                            variant=\"body2\"\n                                            color=\"primary\"\n                                        >\n                                            Create a Forum\n                                        </Typography>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Paper>\n                </Box>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Join;\n","// Dependencies\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectFormErrors,\n    resetFormErrors,\n} from '../../redux/slices/errorsSlice';\nimport { createForum } from '../../redux/slices/forumAuthSlice';\n\n// Material UI Styles\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#1E3B70',\n    },\n    box: {\n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n    },\n    paper: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(4, 3),\n        width: '80%',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(2),\n    },\n    toggle: {\n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: theme.spacing(2),\n    },\n    submit: {\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2, 0),\n    },\n    margin: {\n        marginBottom: theme.spacing(2),\n    },\n    gridItem: {\n        paddingBottom: 0,\n    },\n    warningMessageContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        bottom: theme.spacing(5),\n        width: '100%',\n    },\n    warningMessage: {\n        backgroundColor: 'rgb(255, 0, 19)',\n        borderRadius: theme.spacing(0.5),\n        color: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        padding: theme.spacing(2),\n    },\n    warningText: {\n        margin: theme.spacing(0, 2),\n    },\n    iconStyles: {\n        color: 'white',\n    },\n}));\n\n// Custom React Styles\nconst linkStyle = {\n    textDecoration: 'none',\n};\n\nfunction Create(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // Redux Handles\n    const dispatch = useDispatch();\n    const formErrors = useSelector(selectFormErrors);\n\n    // React Handles\n    const [forum, setForum] = useState({\n        name: '',\n        password: '',\n        isPublic: true,\n        errors: {},\n    });\n\n    function handleChange(event) {\n        setForum({\n            ...forum,\n            [event.target.id]: event.target.value,\n        });\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const forumData = {\n            name: forum.name,\n            isPublic: forum.isPublic,\n        };\n\n        // If Forum is Private, Pass Password into Payload\n        if (!forum.isPublic) {\n            forumData.password = forum.password;\n        }\n\n        dispatch(createForum(forumData, props.history));\n    }\n\n    // Change Privacy Status Depending on Button Clicked\n    function changePrivacyStatus(event) {\n        let isPublic = null;\n        if (event.currentTarget.value === 'true') {\n            isPublic = true;\n        } else if (event.currentTarget.value === 'false') {\n            isPublic = false;\n        }\n\n        setForum({\n            ...forum,\n            isPublic: isPublic,\n        });\n    }\n\n    return (\n        <Box component=\"main\" className={classes.root}>\n            {formErrors.limit && (\n                <Box className={classes.warningMessageContainer}>\n                    <Box className={classes.warningMessage}>\n                        <ErrorOutlineIcon className={classes.iconStyles} />\n                        <Typography className={classes.warningText}>\n                            {formErrors.limit}\n                        </Typography>\n                        <IconButton size=\"small\">\n                            <CloseIcon\n                                onClick={() => dispatch(resetFormErrors())}\n                                fontSize=\"small\"\n                                className={classes.iconStyles}\n                            />\n                        </IconButton>\n                    </Box>\n                </Box>\n            )}\n\n            <Container maxWidth=\"xs\">\n                <CssBaseline />\n                <Box className={classes.box}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h5\"\n                            className={classes.margin}\n                        >\n                            Create a Forum\n                        </Typography>\n                        <form\n                            className={classes.form}\n                            noValidate\n                            onSubmit={handleSubmit}\n                        >\n                            <TextField\n                                className={classes.margin}\n                                variant=\"outlined\"\n                                name=\"name\"\n                                required\n                                fullWidth\n                                label=\"Forum Name\"\n                                id=\"name\"\n                                autoFocus\n                                onChange={handleChange}\n                                value={forum.name}\n                                error={formErrors.name ? true : false}\n                                helperText={\n                                    formErrors.name ? formErrors.name : null\n                                }\n                            />\n                            {!forum.isPublic && (\n                                <TextField\n                                    className={classes.margin}\n                                    variant=\"outlined\"\n                                    name=\"password\"\n                                    required\n                                    fullWidth\n                                    label=\"Password\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    onChange={handleChange}\n                                    value={forum.password}\n                                    error={formErrors.password ? true : false}\n                                    helperText={\n                                        formErrors.password\n                                            ? formErrors.password\n                                            : null\n                                    }\n                                />\n                            )}\n                            <Grid\n                                container\n                                spacing={2}\n                                className={classes.toggle}\n                            >\n                                <Grid item xs={6}>\n                                    <Button\n                                        fullWidth\n                                        onClick={changePrivacyStatus}\n                                        variant={\n                                            forum.isPublic\n                                                ? 'contained'\n                                                : 'outlined'\n                                        }\n                                        color={\n                                            forum.isPublic\n                                                ? 'secondary'\n                                                : 'default'\n                                        }\n                                        value=\"true\"\n                                    >\n                                        Public\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Button\n                                        fullWidth\n                                        onClick={changePrivacyStatus}\n                                        variant={\n                                            !forum.isPublic\n                                                ? 'contained'\n                                                : 'outlined'\n                                        }\n                                        color={\n                                            !forum.isPublic\n                                                ? 'secondary'\n                                                : 'default'\n                                        }\n                                        value=\"false\"\n                                    >\n                                        Private\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Create\n                            </Button>\n                            <Grid container justify=\"center\">\n                                <Grid item>\n                                    <Link\n                                        to=\"/join\"\n                                        onClick={() =>\n                                            dispatch(resetFormErrors())\n                                        }\n                                        style={linkStyle}\n                                    >\n                                        <Typography\n                                            variant=\"body2\"\n                                            color=\"primary\"\n                                        >\n                                            Join a Forum\n                                        </Typography>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Paper>\n                </Box>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Create;\n","// Dependencies\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Material UI Styles\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#1E3B70',\n    },\n    box: {\n        alignItems: 'center',\n        display: 'flex',\n        height: '100vh',\n        justifyContent: 'center',\n    },\n    content: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    heading: {\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(3),\n    },\n    grid: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n// Custom React Styles\nconst linkStyle = {\n    textDecoration: 'none',\n};\n\nfunction GetStarted() {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    return (\n        <Box component=\"main\" className={classes.root}>\n            <Container maxWidth=\"xs\">\n                <CssBaseline />\n                <Box className={classes.box}>\n                    <Paper elevation={3} className={classes.paper}>\n                        {/* Content */}\n                        <Box className={classes.content}>\n                            <Typography\n                                component=\"h1\"\n                                variant=\"h5\"\n                                className={classes.heading}\n                            >\n                                Get Started!\n                            </Typography>\n                            <Typography component=\"h2\" variant=\"body1\">\n                                To get started, join or create a forum.\n                            </Typography>\n                        </Box>\n\n                        {/* Links */}\n                        <Grid container spacing={2} className={classes.grid}>\n                            <Grid item xs={12} sm={6}>\n                                <Link to=\"/join\" style={linkStyle}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        fullWidth\n                                    >\n                                        Join\n                                    </Button>\n                                </Link>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <Link to=\"/create\" style={linkStyle}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        fullWidth\n                                    >\n                                        Create\n                                    </Button>\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Box>\n            </Container>\n        </Box>\n    );\n}\n\nexport default GetStarted;\n","// Dependencies\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// Material UI Styles\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\n// Custom Styles and Modules\nimport './CreateComment.css';\nimport DOMPurify from '../../utils/domPurifyConfig';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n    },\n    margin: {\n        marginBottom: theme.spacing(3),\n    },\n    buttonContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n    },\n}));\n\nfunction CreateComment(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // Handle New Post Input\n    const [commentContent, setCommentContent] = useState('');\n\n    // Handle Form Submit\n    function handleFormSubmit(event) {\n        event.preventDefault();\n\n        const purifiedCommentContent = DOMPurify.sanitize(commentContent);\n\n        axios\n            .post('/api/posts/addComment', {\n                content: purifiedCommentContent,\n                postId: props.postId,\n            })\n            .then(() => {\n                // Update Comments List\n                props.updatePostCommentsAndNumOfComments();\n            })\n            .catch((err) => console.error(err));\n\n        // Reset Form Handles\n        setCommentContent('');\n    }\n\n    return (\n        <Grid item xs={12}>\n            <Paper className={clsx(classes.paper, classes.margin)}>\n                <form noValidate onSubmit={handleFormSubmit}>\n                    <ReactQuill\n                        className={classes.margin}\n                        theme=\"snow\"\n                        value={commentContent}\n                        onChange={setCommentContent}\n                        placeholder=\"Leave a comment...\"\n                    />\n                    <Box className={classes.buttonContainer}>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Comment\n                        </Button>\n                    </Box>\n                </form>\n            </Paper>\n        </Grid>\n    );\n}\n\nexport default CreateComment;\n","// Dependencies\nimport React from 'react';\nimport moment from 'moment';\n\n// Material UI Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    comment: {\n        padding: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    commentInfoMargin: {\n        marginBottom: theme.spacing(2),\n    },\n    commentInfoText: {\n        color: 'gray',\n        fontSize: '14px',\n    },\n}));\n\nfunction Comment(props) {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // React Implementation of Setting Inner HTML\n    const contentMarkup = {\n        __html: props.content,\n    };\n\n    // Published Date Difference\n    const dateDifference = moment(props.publishDate).fromNow();\n\n    return (\n        <Grid item xs={12}>\n            <Paper className={classes.comment}>\n                <Box className={classes.commentInfoMargin}>\n                    <Typography\n                        variant=\"body1\"\n                        className={classes.commentInfoText}\n                    >\n                        {props.author} • {dateDifference}\n                    </Typography>\n                </Box>\n                <Box>\n                    <Typography\n                        variant=\"body1\"\n                        component=\"div\"\n                        dangerouslySetInnerHTML={contentMarkup}\n                    ></Typography>\n                </Box>\n            </Paper>\n        </Grid>\n    );\n}\n\nexport default Comment;\n","// Dependencies\nimport React from 'react';\n\n// React Components\nimport Comment from './Comment';\n\n// Material UI Components\nimport Grid from '@material-ui/core/Grid';\n\nfunction CommentsList(props) {\n    return (\n        <Grid item xs={12}>\n            {props.postComments.map((comment) => {\n                return (\n                    <Comment\n                        content={comment.content}\n                        author={comment.author.name}\n                        authorId={comment.author._id}\n                        publishDate={comment.date}\n                        key={comment._id}\n                    />\n                );\n            })}\n        </Grid>\n    );\n}\n\nexport default CommentsList;\n","// Dependencies\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// React Components\nimport Post from '../forum/Post';\nimport AppBarAndDrawer from '../forum/AppBarAndDrawer';\nimport MembersPanel from '../forum/MembersPanel';\nimport CreateComment from './CreateComment';\nimport CommentsList from './CommentsList';\n\nimport { usePostId } from '../../utils/customHooks';\n\n// Material UI Components\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        // required to have main content below toolbar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(5, 3, 3, 3),\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction PostPage() {\n    // Use Material UI Styles\n    const classes = useStyles();\n\n    // React Handles\n    const postId = usePostId();\n    const [post, setPost] = useState(null);\n    const [parentForumId, setParentForumId] = useState(null);\n    const [postComments, setPostComments] = useState(null);\n    const [numOfComments, setNumOfComments] = useState(null);\n\n    useEffect(() => {\n        axios\n            .post('/api/posts/getPostInfo', { postId })\n            .then((response) => {\n                const post = response.data;\n\n                setPost(post);\n                setNumOfComments(post.comments.length);\n                setParentForumId(post.parentForum._id);\n                setPostComments(post.comments);\n            })\n            .catch((err) => console.error(err));\n    }, [postId]);\n\n    function updatePostCommentsAndNumOfComments() {\n        axios\n            .post('/api/posts/getPostComments', { postId })\n            .then((response) => {\n                const post = response.data;\n\n                setPostComments(post.comments);\n                setNumOfComments(post.comments.length);\n            })\n            .catch((err) => console.error(err));\n    }\n\n    return (\n        <Box className={classes.root}>\n            <CssBaseline />\n            {parentForumId && <AppBarAndDrawer forumId={parentForumId} />}\n\n            <Box component=\"main\" className={classes.content}>\n                <div className={classes.toolbar} />\n\n                <Grid container spacing={3}>\n                    <Grid item container xs={12} sm={8}>\n                        {post && numOfComments !== null && (\n                            <Post\n                                parentForumId={post.parentForum._id}\n                                parentForumName={post.parentForum.name}\n                                postId={post._id}\n                                title={post.title}\n                                content={post.content}\n                                author={post.author.name}\n                                authorId={post.author._id}\n                                publishDate={post.date}\n                                numOfComments={numOfComments}\n                            />\n                        )}\n\n                        {postId && (\n                            <CreateComment\n                                postId={postId}\n                                updatePostCommentsAndNumOfComments={\n                                    updatePostCommentsAndNumOfComments\n                                }\n                            />\n                        )}\n\n                        {postComments && (\n                            <CommentsList postComments={postComments} />\n                        )}\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        {parentForumId && (\n                            <MembersPanel forumId={parentForumId} />\n                        )}\n                    </Grid>\n                </Grid>\n            </Box>\n        </Box>\n    );\n}\n\nexport default PostPage;\n","// Dependencies\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from '../../redux/slices/authSlice';\n\n// Styles\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../ui/theme';\n\n// Components\nimport Landing from '../onboard/Landing';\nimport Login from '../auth/Login';\nimport Signup from '../auth/Signup';\nimport PageNotFound from '../error/PageNotFound';\n\n// Protected Components\nimport PrivateRoute from '../private/PrivateRoute';\nimport Forum from '../forum/Forum';\nimport Join from '../forum-auth/Join';\nimport Create from '../forum-auth/Create';\nimport GetStarted from '../onboard/GetStarted';\nimport PostPage from '../post/PostPage';\n\nfunction App() {\n    // Validate JWT as a Component Effect\n    const dispatch = useDispatch();\n\n    async function validateJWT() {\n        const response = await axios.get('/api/users/validateJWT');\n        const jwtExpired = response.data;\n\n        if (jwtExpired) {\n            dispatch(logoutUser());\n        }\n    }\n\n    useEffect(() => {\n        validateJWT();\n    });\n\n    return (\n        <Router>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Landing} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/signup\" component={Signup} />\n                        <PrivateRoute\n                            exact\n                            path=\"/getStarted\"\n                            component={GetStarted}\n                        />\n                        <PrivateRoute exact path=\"/join\" component={Join} />\n                        <PrivateRoute exact path=\"/create\" component={Create} />\n                        <PrivateRoute\n                            exact\n                            path=\"/forum/:id\"\n                            component={Forum}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/post/:id\"\n                            component={PostPage}\n                        />\n                        <Route path=\"*\" component={PageNotFound} />\n                    </Switch>\n                </div>\n            </ThemeProvider>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport store from './redux/store';\n\n// Components\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}